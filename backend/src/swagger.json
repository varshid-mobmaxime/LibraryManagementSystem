{
  "openapi": "3.0.0",
  "info": {
    "title": "Swagger API",
    "description": "Swagger API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5001/",
      "description": ""
    }
  ],
  "paths": {
    "/user/register": {
      "post": {
        "tags": ["User"],
        "summary": "Register",
        "description": "Register.",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": ["User"],
        "summary": "Login",
        "description": "Login.",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/admin/register": {
      "post": {
        "tags": ["Admin"],
        "summary": "Register admin",
        "description": "Register admin",
        "requestBody": {
          "description": "Created admin object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterAdmin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/admin/login": {
      "post": {
        "tags": ["Admin"],
        "summary": "Login admin",
        "description": "Login admin",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginAdmin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": ["Admin"],
        "summary": "get users",
        "parameters": [],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/posts": {
      "post": {
        "tags": ["Posts"],
        "summary": "Add a new post",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Posts"
              }
            }
          },
          "required": true
        },
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": ["Posts"],
        "summary": "get post",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page of post",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit of post",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/posts/{id}": {
      "put": {
        "tags": ["Posts"],
        "summary": "put post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Posts"
              }
            }
          },
          "required": true
        },
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": ["Posts"],
        "summary": "get post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Posts"],
        "summary": "Delete post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Elon"
          },
          "email": {
            "type": "string",
            "example": "elon@tesla.com"
          },
          "password": {
            "type": "string",
            "example": "elon@1234"
          },
          "role": {
            "type": "string",
            "example": "author"
          }
        },
        "xml": {
          "name": "RegisterUser"
        }
      },
      "LoginUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "elon@tesla.com"
          },
          "password": {
            "type": "string",
            "example": "elon@1234"
          }
        },
        "xml": {
          "name": "LoginUser"
        }
      },
      "RegisterAdmin": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "admin"
          },
          "email": {
            "type": "string",
            "example": "admin@tesla.com"
          },
          "password": {
            "type": "string",
            "example": "admin@1234"
          },
          "role": {
            "type": "string",
            "example": "admin"
          }
        },
        "xml": {
          "name": "RegisterAdmin"
        }
      },
      "LoginAdmin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "admin@tesla.com"
          },
          "password": {
            "type": "string",
            "example": "admin@1234"
          }
        },
        "xml": {
          "name": "LoginAdmin"
        }
      },
      "Posts": {
        "type": "object",
        "properties": {
          "postTitle": {
            "type": "string",
            "example": "Deno"
          },
          "postBody": {
            "type": "string",
            "example": "New Nodejs Framework"
          },
          "genre": {
            "type": "string",
            "example": "tech"
          }
        },
        "xml": {
          "name": "Posts"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "name": "Authorization",
        "type": "apiKey",
        "in": "header",
        "bearerFormat": "JWT"
      }
    }
  }
}
